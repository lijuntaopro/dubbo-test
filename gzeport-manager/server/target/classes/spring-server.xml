<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-3.1.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
	http://code.alibabatech.com/schema/dubbo  
    http://code.alibabatech.com/schema/dubbo/dubbo.xsd
	">
	 
	 <bean id="demoSV" class="api.server.li.service.impl.DemoSVImpl"></bean>
	 <bean id="demoRSV" class="api.server.li.dubbo.impl.DemoRSVImpl"></bean>
	 <dubbo:application name="${server.appName}"></dubbo:application>
	 
	 <dubbo:registry address="${registry.address}" check="false" subscribe="false" register=""></dubbo:registry>
	 <dubbo:protocol name="${server.protocol.name}" port="${server.protocol.port}"></dubbo:protocol>
	 
	 
	 <dubbo:service interface="api.service.li.dubbo.interfaces.IDemoRSV" ref="demoRSV" /> 
     <!-- 用于扫苗spring的支配范围 -->
     <context:component-scan base-package="api.server.li.."></context:component-scan>
      <!-- 配置服务注册组件 -->
     <bean class="org.springframework.beans.factory.config.PreferencesPlaceholderConfigurer">
     	<property name="locations">
     		<list>
	     		<value>classpath:dubbo.properties</value>
	     		<value>classpath:db.properties</value>
     		</list>
     	</property>
     </bean>
    
    
    <!--公共库配置 事务及服务-->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${db.gzeport.driverClass}" />
			<property name="jdbcUrl" value="${db.gzeport.jdbcUrl}" />
			<property name="user" value="${db.gzeport.user}" />
			<property name="password" value="${db.gzeport.password}" />
			<property name="autoCommitOnClose" value="${db.gzeport.autoCommitOnClose}"/>
			<property name="checkoutTimeout" value="${db.gzeport.checkoutTimeout}"/>
			<property name="initialPoolSize" value="${db.gzeport.minPoolSize}"/>
			<property name="minPoolSize" value="${db.gzeport.minPoolSize}"/>
			<property name="maxPoolSize" value="${db.gzeport.maxPoolSize}"/>
			<property name="maxIdleTime" value="${db.gzeport.maxIdleTime}"/>
			<property name="acquireIncrement" value="${db.gzeport.acquireIncrement}"/>
			<property name="maxStatements" value="${db.gzeport.maxStatements}"/>
    </bean>


    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <!-- 
        <property name="configLocation" value="classpath:mybatis.cfg.xml"/>
         -->
        <property name="mapperLocations" value="classpath*:mapperxml/DemoMapper.xml" />
    </bean>
    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
	  <constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>

    <bean id="JdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
    	<property name="dataSource" ref="dataSource"/>
    </bean>
    
    <!-- 扫描式接口代理	 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="api.server.li.dao.mapper.common" />
		<!--当使用了多个dataSource时，要指定sqlSessionFactoryBean -->
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>
    
    <!--事务管理DataSourceTransactionManager-->
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>
  	<bean id="transactionTemplate" class="org.springframework.transaction.support.TransactionTemplate">
		<property name="transactionManager">
			<ref local="txManager" />
		</property>
	</bean>
	
    <!--启动spring注解功能-->
    <tx:annotation-driven transaction-manager="txManager" />

	<!-- aop事务配置-->
	<aop:config>
		<aop:pointcut id="productServiceMethodsCommon_ent" expression="execution(* api.server.*.service..*.*(..))" />
		<aop:advisor advice-ref="txAdviceCommon_ent" pointcut-ref="productServiceMethodsCommon_ent" />
	</aop:config>

	<tx:advice id="txAdviceCommon_ent" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="save*" propagation="REQUIRED" read-only="false"  rollback-for="java.lang.Exception"/>
			<tx:method name="regist*" propagation="REQUIRED" read-only="false"  rollback-for="java.lang.Exception"/>
			<tx:method name="import*" propagation="REQUIRED" read-only="false" rollback-for="java.lang.Exception" />
			<tx:method name="insert*" propagation="REQUIRED" read-only="false"  rollback-for="java.lang.Exception"/>
			<tx:method name="add*" propagation="REQUIRED" read-only="false"  rollback-for="java.lang.Exception"/>
			<tx:method name="create*" propagation="REQUIRED" read-only="false" rollback-for="java.lang.Exception" />
			<tx:method name="delete*" propagation="REQUIRED" read-only="false"  rollback-for="java.lang.Exception"/>
			<tx:method name="update*" propagation="REQUIRED" read-only="false" rollback-for="java.lang.Exception" />
			<tx:method name="edit*" propagation="REQUIRED" read-only="false"  rollback-for="java.lang.Exception"/>
			<tx:method name="remove*" propagation="REQUIRED" read-only="false" rollback-for="java.lang.Exception" />
			<tx:method name="pulish*" propagation="REQUIRED" read-only="false"  rollback-for="java.lang.Exception"/>
			<tx:method name="execute*" propagation="REQUIRED" read-only="false"  rollback-for="java.lang.Exception"/>
			<tx:method name="batch*" propagation="REQUIRED" read-only="false"  rollback-for="java.lang.Exception"/>
			<tx:method name="generate*" propagation="REQUIRED" read-only="false"  rollback-for="java.lang.Exception"/>

			<tx:method name="list*" propagation="SUPPORTS" read-only="true"  rollback-for="java.lang.Exception"/>
			<tx:method name="get*" propagation="SUPPORTS" read-only="true"  rollback-for="java.lang.Exception"/>
			<tx:method name="query*" propagation="SUPPORTS" read-only="true"  rollback-for="java.lang.Exception"/>
			<tx:method name="find*" propagation="SUPPORTS" read-only="true" rollback-for="java.lang.Exception" />
			<tx:method name="*" propagation="SUPPORTS" read-only="true" rollback-for="java.lang.Exception" />
		</tx:attributes>
	</tx:advice>
    

	
</beans>